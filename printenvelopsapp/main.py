import re


class DateToWords():

	def __init__(self, date):
		self.date = date
		self.date_validation(self.date)

		self.month_list = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня',
					  'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']

		self.ones_list = [('', ''), ('первое', 'первого'), ('второе', 'второго'), ('третье', 'третьего'), ('четвёртое', 'четвертого'),
				('пятое', 'пятого'), ('шестое', 'шестого'), ('седьмое', 'седьмого'), ('восьмое', 'восьмого'),
				('девятое', 'девятого'), ('десятое', 'десятого'), ('одиннадцатое', 'одинадцатого'),
				('двенадцатое', 'двенадцатого'), ('тринадцатое', 'тринадцатого'), ('четырнадцатое', 'четырнадцатого'),
				('пятнадцатое', 'пятнадцатого'), ('шестнадцатое', 'шестнадцатого'), ('семнадцатое', 'семнадцатого'),
				('восемнадцатое', 'восемнадцатого'), ('девятнадцатое', 'девятнадцатого'), ('двадцатое', 'двадцатого'),
				('двадцать первое', 'двадцать первого'), ('двадцать второе', 'двадцать второго'),
				('двадцать третье', 'двадцать третьего'), ('двадацать четвёртое', 'двадцать четвертого'),
				('двадцать пятое', 'двадцать пятого'), ('двадцать шестое', 'двадцать шестого'),
				('двадцать седьмое', 'двадцать седьмого'), ('двадцать восьмое', 'двадцать восьмого'),
				('двадцать девятое', 'двадцать девятого'), ('тридцатое', 'тридцатого'),
				('тридцать первое', 'тридцать первого'), ('тридцать второе', 'тридцать второго'),
				('тридцать третье', 'тридцать третьего'), ('двадацать четвёртое', 'тридцать четвертого'),
				('тридцать пятое', 'тридцать пятого'), ('тридцать шестое', 'тридцать шестого'),
				('тридцать седьмое', 'тридцать седьмого'), ('тридцать восьмое', 'тридцать восьмого'),
				('тридцать девятое', 'тридцать девятого'), ('сороковое', 'сорокового'),
				('сорок первое', 'сорок первого'), ('сорок второе', 'сорок второго'),
				('сорок третье', 'сорок третьего'), ('двадацать четвёртое', 'сорок четвертого'),
				('сорок пятое', 'сорок пятого'), ('сорок шестое', 'сорок шестого'),
				('сорок седьмое', 'сорок седьмого'), ('сорок восьмое', 'сорок восьмого'),
				('сорок девятое', 'сорок девятого'), ('пятидесятое', 'пятидесятого'),
				('пятьдесят первое', 'пятьдесят первого'), ('пятьдесят второе', 'пятьдесят второго'),
				('пятьдесят третье', 'пятьдесят третьего'), ('двадацать четвёртое', 'пятьдесят четвертого'),
				('пятьдесят пятое', 'пятьдесят пятого'), ('пятьдесят шестое', 'пятьдесят шестого'),
				('пятьдесят седьмое', 'пятьдесят седьмого'), ('пятьдесят восьмое', 'пятьдесят восьмого'),
				('пятьдесят девятое', 'пятьдесят девятого'), ('шестидесятое', 'шестидесятого'),
				('шестьдесят первое', 'шестьдесят первого'), ('шестьдесят второе', 'шестьдесят второго'),
				('шестьдесят третье', 'шестьдесят третьего'), ('двадацать четвёртое', 'шестьдесят четвертого'),
				('шестьдесят пятое', 'шестьдесят пятого'), ('шестьдесят шестое', 'шестьдесят шестого'),
				('шестьдесят седьмое', 'шестьдесят седьмого'), ('шестьдесят восьмое', 'шестьдесят восьмого'),
				('шестьдесят девятое', 'шестьдесят девятого'), ('семидесятое', 'семидесятого'),
				('семьдесят первое', 'семьдесят первого'), ('семьдесят второе', 'семьдесят второго'),
				('семьдесят третье', 'семьдесят третьего'), ('двадацать четвёртое', 'семьдесят четвертого'),
				('семьдесят пятое', 'семьдесят пятого'), ('семьдесят шестое', 'семьдесят шестого'),
				('семьдесят седьмое', 'семьдесят седьмого'), ('семьдесят восьмое', 'семьдесят восьмого'),
				('семьдесят девятое', 'семьдесят девятого'), ('восьмидесятое', 'восьмидесятого'),
				('восемьдесят первое', 'восемьдесят первого'), ('восемьдесят второе', 'восемьдесят второго'),
				('восемьдесят третье', 'восемьдесят третьего'), ('двадацать четвёртое', 'восемьдесят четвертого'),
				('восемьдесят пятое', 'восемьдесят пятого'), ('восемьдесят шестое', 'восемьдесят шестого'),
				('восемьдесят седьмое', 'восемьдесят седьмого'), ('восемьдесят восьмое', 'восемьдесят восьмого'),
				('восемьдесят девятое', 'восемьдесят девятого'), ('девяностое', 'девяностого'),
				('девяносто первое', 'девяносто первого'), ('девяносто второе', 'девяносто второго'),
				('девяносто третье', 'девяносто третьего'), ('двадацать четвёртое', 'девяносто четвертого'),
				('девяносто пятое', 'девяносто пятого'), ('девяносто шестое', 'девяносто шестого'),
				('девяносто седьмое', 'девяносто седьмого'), ('девяносто восьмое', 'девяносто восьмого'),
				('девяносто девятое', 'девяносто девятого')
				]
		self.hundreds_list = [('', ''), ('сто', 'сотого'), ('двести','двухсотого'), ('триста','трёхсотого'),
						 ('четыреста','четырёхсотого'), ('пятьсот','пятисотого'), ('шестьсот','шестисотого'),
						 ('семьсот','семисотого'), ('восемьсот','восьмисотого'), ('девятьсот','девятисотого')
						 ]
		self.thousands_list = [('', ''), ('тысяча', 'тысячного'), ('две тысячи', 'двухтысячного')]

	def __str__(self):
		return self.date

	def date_validation(self, date):
		valid_date = r'^(((0[1-9]|[12]\d|3[01])\.(0[13578]|1[02])\.((19|[2-9]\d)\d{2}))|((0[1-9]|[12]\d|30)\.(0[13456789]|1[012])\.((19|[2-9]\d)\d{2}))|((0[1-9]|1\d|2[0-8])\.02\.((19|[2-9]\d)\d{2}))|(29\.02\.((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$'
		result = re.match(valid_date, date)
		if result == None:
			raise Exception('{} is not valid date format'.format(date))

	def split_date(self, date):
		split_date = date.split('.')
		return split_date

	def get_day(self):
		day = int(self.date.split('.')[0])
		return day

	def get_day_text(self):
		day = int(self.date.split('.')[0])
		text_day = self.ones_list[day][0]
		return text_day

	def get_month(self):
		month = int(self.date.split('.')[1])
		return month

	def get_month_text(self):
		month = int(self.date.split('.')[1])
		text_month = self.month_list[month - 1]
		return text_month

	def year_validation(self, date):
		year = self.date.split('.')[2]
		return year

	def get_year(self):
		year = self.date.split('.')[2]
		return year

	def get_year_text(self):
		year = self.date.split('.')[2]
		if year == '2000':
			return self.thousands_list[2][1]
		thousands = self.thousands_list[int(year[0])][0]
		hundreds = self.hundreds_list[int(year[1])][0]
		ones = self.ones_list[int(year[2:4])][1]
		return '{} {} {}'.format(thousands, hundreds, ones)




